#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç CSV –æ—Ç—á–µ—Ç—ã –≤–º–µ—Å—Ç–æ Excel
"""

import sys
import os
from datetime import datetime

def generate_demo_report():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ–º–æ –æ—Ç—á–µ—Ç –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"""
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã Cian Parser Bot")
    print("=" * 60)
    
    try:
        from parser import parser
        from csv_generator import csv_generator
        
        print("‚è≥ –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–∞—Ä—Å–∏–Ω–≥ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
        
        # –ü–∞—Ä—Å–∏–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        offers, stats = parser.parse_offers("demo_user", only_new=False)
        
        print(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {stats['total_count']}")
        print(f"üìã –ü–æ–ª—É—á–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö: {len(offers)}")
        
        # –°–æ–∑–¥–∞–µ–º CSV –æ—Ç—á–µ—Ç
        print("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ CSV –æ—Ç—á–µ—Ç–∞...")
        report_path = csv_generator.generate_report(offers, stats, "demo_user")
        
        print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {report_path}")
        print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(report_path)} –±–∞–π—Ç")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é –ø–µ—Ä–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
        if offers:
            print("\nüè¢ –ü—Ä–µ–≤—å—é –ø–µ—Ä–≤—ã—Ö 3 –æ–±—ä—è–≤–ª–µ–Ω–∏–π:")
            print("-" * 60)
            
            for i, offer in enumerate(offers[:3], 1):
                print(f"\nüìã –û–±—ä—è–≤–ª–µ–Ω–∏–µ {i}:")
                print(f"üÜî ID: {offer.get('id')}")
                print(f"üí∞ –¶–µ–Ω–∞: {offer.get('price_text')}")
                print(f"üìè –ü–ª–æ—â–∞–¥—å: {offer.get('area')}")
                print(f"üìç –ê–¥—Ä–µ—Å: {offer.get('address', '')[:80]}...")
                print(f"üè™ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: {offer.get('types', '')[:50]}")
                print(f"üîó –°—Å—ã–ª–∫–∞: {offer.get('url')}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ CSV —Ñ–∞–π–ª–∞
        print(f"\nüìÑ –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ CSV –æ—Ç—á–µ—Ç–∞:")
        print("-" * 60)
        try:
            with open(report_path, 'r', encoding='utf-8') as f:
                for i, line in enumerate(f):
                    if i < 10:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫
                        print(f"{i+1:2d}: {line.rstrip()}")
                    else:
                        break
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")
        
        print(f"\n‚ú® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìÇ –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤: {report_path}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def show_bot_interface():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞"""
    print("\n" + "=" * 60)
    print("üì± –î–ï–ú–û –ò–ù–¢–ï–†–§–ï–ô–°–ê –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢–ê")
    print("=" * 60)
    
    print("""
üè¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Cian Parser Bot!

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –∞—Ä–µ–Ω–¥—ã
–æ—Ñ–∏—Å–Ω—ã—Ö –ø–æ–º–µ—â–µ–Ω–∏–π –≤ –ü–µ—Ä–º–∏ —Å —Å–∞–π—Ç–∞ Cian.ru

üìä –ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç:
‚Ä¢ –ü–∞—Ä—Å–∏—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è  
‚Ä¢ –°–æ–∑–¥–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–µ CSV/Excel –æ—Ç—á–µ—Ç—ã
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É

üöÄ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:

[üöÄ Start]  [üîÑ Update]
    [‚ùì –ü–æ–º–æ—â—å]

--------------------------------------------------

üöÄ Start - –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å Cian.ru
‚Ä¢ –ò—â–µ—Ç –≤—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
‚Ä¢ –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç —Å–æ –≤—Å–µ–º–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏  
‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö

üîÑ Update - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –±—ã–ª–æ –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∑–∞–ø—É—Å–∫–µ Start
‚Ä¢ –°–æ–∑–¥–∞–µ—Ç –æ—Ç—á–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
‚Ä¢ –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏

üìÑ –û—Ç—á–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–∏—Å–∫–∞
‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –æ–±—ä—è–≤–ª–µ–Ω–∏–π  
‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã
‚Ä¢ –ü—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
""")

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞:")
    print("-" * 60)
    
    deps = [
        ("python-telegram-bot", "–û—Å–Ω–æ–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–æ—Ç–∞"),
        ("pandas", "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Excel –æ—Ç—á–µ—Ç–æ–≤"),
        ("openpyxl", "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å Excel —Ñ–∞–π–ª–∞–º–∏")
    ]
    
    missing = []
    for module, description in deps:
        try:
            if module == "python-telegram-bot":
                import telegram
                print(f"‚úÖ {module} - {description}")
            elif module == "pandas":
                import pandas
                print(f"‚úÖ {module} - {description}")  
            elif module == "openpyxl":
                import openpyxl
                print(f"‚úÖ {module} - {description}")
        except ImportError:
            print(f"‚ùå {module} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù - {description}")
            missing.append(module)
    
    if missing:
        print(f"\nüì¶ –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
        print(f"   pip3 install {' '.join(missing)}")
        print(f"\nüí° –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print(f"   python3 -m venv venv")
        print(f"   source venv/bin/activate")
        print(f"   pip install -r requirements.txt")
        print(f"\nüìÑ –¢–µ–∫—É—â–∞—è –¥–µ–º–æ –≤–µ—Ä—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å CSV –æ—Ç—á–µ—Ç–∞–º–∏")
    else:
        print(f"\n‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print(f"üöÄ –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É:")
        print(f"   python3 bot.py")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:")
    print("1. –î–µ–º–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞")  
    print("2. –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞")
    print("3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    print("4. –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã")
    
    try:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-4) –∏–ª–∏ Enter –¥–ª—è –≤—Å–µ—Ö: ").strip()
        
        if choice in ['1', '4', '']:
            print("\n" + "üîÑ –î–ï–ú–û –ü–ê–†–°–ò–ù–ì–ê" + "=" * 45)
            generate_demo_report()
        
        if choice in ['2', '4', '']:
            show_bot_interface()
        
        if choice in ['3', '4', '']:
            check_dependencies()
            
        print(f"\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ –≤ README.md")
        
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main() 