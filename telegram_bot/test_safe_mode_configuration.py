#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
"""

import sys
import os
from datetime import datetime

def test_safe_mode_enabled():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º –≤ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –í–ö–õ–Æ–ß–ï–ù–ù–û–ì–û –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...\n")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º BOT_TOKEN –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    os.environ['BOT_TOKEN'] = 'test_token'
    import config
    original_setting = config.SAFE_MODE_ENABLED
    config.SAFE_MODE_ENABLED = True
    
    try:
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º safe_mode —Å –Ω–æ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π
        from safe_mode import SafeMode
        safe_mode_test = SafeMode("dataBD/real_estate_data.db")
        
        test_user_id = "test_user_123"
        
        print(f"1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
        can_parse, info = safe_mode_test.can_parse(test_user_id)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ' if can_parse else 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {info.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
        print(f"   –°—Ç–∞—Ç—É—Å: {info.get('status', 'unknown')}")
        print()
        
        if can_parse:
            print("2. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥:")
            success = safe_mode_test.log_parsing(test_user_id, success=True)
            print(f"   –ó–∞–ø–∏—Å—å: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
            print()
            
            print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω):")
            can_parse2, info2 = safe_mode_test.can_parse(test_user_id)
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ' if can_parse2 else 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}")
            print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {info2.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
            print(f"   –ß–∞—Å–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {info2.get('hours_left', 'N/A')}")
            print(f"   –°–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω: {info2.get('next_available', 'N/A')}")
            print()
        
        print("4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        stats = safe_mode_test.get_user_safety_stats(test_user_id)
        print(f"   –ü–∞—Ä—Å–∏–Ω–≥–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {stats.get('today_count', 0)}")
        print(f"   –í—Å–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–æ–≤: {stats.get('total_count', 0)}")
        print(f"   –ú–æ–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å —Å–µ–π—á–∞—Å: {'‚úÖ –î–∞' if stats.get('can_parse_now') else 'üö´ –ù–µ—Ç'}")
        print(f"   –°–ª–µ–¥—É—é—â–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω: {stats.get('next_available', 'N/A')}")
        print()
        
        print("5. –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        global_stats = safe_mode_test.get_global_safety_stats()
        print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {global_stats.get('total_users', 0)}")
        print(f"   –í—Å–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–æ–≤: {global_stats.get('total_parsings', 0)}")
        print(f"   –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: {global_stats.get('system_status', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        config.SAFE_MODE_ENABLED = original_setting
    
    print("\n" + "="*50 + "\n")

def test_safe_mode_disabled():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º –≤ –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –û–¢–ö–õ–Æ–ß–ï–ù–ù–û–ì–û –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞...\n")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º BOT_TOKEN –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    os.environ['BOT_TOKEN'] = 'test_token'
    import config
    original_setting = config.SAFE_MODE_ENABLED
    config.SAFE_MODE_ENABLED = False
    
    try:
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º safe_mode —Å –Ω–æ–≤–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π
        from safe_mode import SafeMode
        safe_mode_test = SafeMode("dataBD/real_estate_data.db")
        
        test_user_id = "test_user_disabled"
        
        print(f"1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {test_user_id}:")
        can_parse, info = safe_mode_test.can_parse(test_user_id)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ' if can_parse else 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {info.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
        print(f"   –°—Ç–∞—Ç—É—Å: {info.get('status', 'unknown')}")
        print()
        
        print("2. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞):")
        success = safe_mode_test.log_parsing(test_user_id, success=True)
        print(f"   –ó–∞–ø–∏—Å—å: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print()
        
        print("3. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ (–¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º):")
        can_parse2, info2 = safe_mode_test.can_parse(test_user_id)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω–æ' if can_parse2 else 'üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {info2.get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
        print()
        
        print("4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        stats = safe_mode_test.get_user_safety_stats(test_user_id)
        print(f"   –†–µ–∂–∏–º: {stats.get('mode', 'unknown')}")
        print(f"   –ü–∞—Ä—Å–∏–Ω–≥–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {stats.get('today_count', 0)}")
        print(f"   –ú–æ–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å —Å–µ–π—á–∞—Å: {'‚úÖ –î–∞' if stats.get('can_parse_now') else 'üö´ –ù–µ—Ç'}")
        print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª: {stats.get('safety_interval', 'N/A')}")
        print()
        
        print("5. –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        global_stats = safe_mode_test.get_global_safety_stats()
        print(f"   –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: {global_stats.get('system_status', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   –ò–Ω—Ç–µ—Ä–≤–∞–ª: {global_stats.get('safety_interval', 'N/A')}")
        
    finally:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        config.SAFE_MODE_ENABLED = original_setting
    
    print("\n" + "="*50 + "\n")

def test_config_change():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üîß –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞\n")
    
    print("–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª config.py")
    print("2. –ù–∞–π–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É: SAFE_MODE_ENABLED = True")
    print("3. –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞:")
    print("   - SAFE_MODE_ENABLED = True   # –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è")
    print("   - SAFE_MODE_ENABLED = False  # –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è")
    print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
    print()
    
    os.environ['BOT_TOKEN'] = 'test_token'
    import config
    current_state = "–í–ö–õ–Æ–ß–ï–ù" if config.SAFE_MODE_ENABLED else "–û–¢–ö–õ–Æ–ß–ï–ù"
    print(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞: {current_state}")
    print()

def test_database_location():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n")
    
    db_path = "dataBD/real_estate_data.db"
    
    if os.path.exists(db_path):
        size = os.path.getsize(db_path)
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        print(f"   –†–∞–∑–º–µ—Ä: {size:,} –±–∞–π—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
        import sqlite3
        try:
            with sqlite3.connect(db_path) as conn:
                cursor = conn.cursor()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
                cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='real_estate_listings'")
                if cursor.fetchone():
                    print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ real_estate_listings –Ω–∞–π–¥–µ–Ω–∞")
                    
                    cursor.execute("SELECT COUNT(*) FROM real_estate_listings")
                    count = cursor.fetchone()[0]
                    print(f"   üìä –û–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –±–∞–∑–µ: {count:,}")
                else:
                    print("   ‚ùå –¢–∞–±–ª–∏—Ü–∞ real_estate_listings –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='safety_log'")
                if cursor.fetchone():
                    print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ safety_log –Ω–∞–π–¥–µ–Ω–∞")
                    
                    cursor.execute("SELECT COUNT(*) FROM safety_log")
                    count = cursor.fetchone()[0]
                    print(f"   üõ°Ô∏è –ó–∞–ø–∏—Å–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: {count:,}")
                else:
                    print("   ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ safety_log –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏)")
                    
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    else:
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
    
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–ì–û –†–ï–ñ–ò–ú–ê –ü–ê–†–°–ò–ù–ì–ê")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 50)
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    test_database_location()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∫–ª—é—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º
    test_safe_mode_enabled()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º
    test_safe_mode_disabled()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    test_config_change()
    
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print()
    print("üìù –†–µ–∑—é–º–µ:")
    print("- –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤ –æ–±–æ–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö")
    print("- –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ dataBD/real_estate_data.db")
    print("- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ SAFE_MODE_ENABLED –≤ config.py")
    print("- –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ –ø–∞—Ä—Å–∏–Ω–≥ –¥–æ—Å—Ç—É–ø–µ–Ω –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π")

if __name__ == "__main__":
    main() 